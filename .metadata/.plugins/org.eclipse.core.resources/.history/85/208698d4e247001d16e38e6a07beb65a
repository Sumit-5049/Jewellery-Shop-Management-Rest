package com.virtusa.jsm.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.virtusa.jsm.dto.Product;
import com.virtusa.jsm.dto.VaildatingDTO;
import com.virtusa.jsm.exception.DataNotFoundException;
import com.virtusa.jsm.service.BillService;
import com.virtusa.jsm.service.ShopService;
import com.virtusa.jsm.util.JwtUtil;

@RestController
@RequestMapping("/bill")
public class BillController {
	@Autowired
	BillService service;
	@Autowired
	ShopService sservice;
	@Autowired
	JwtUtil jwtTokenUtil;
    @Autowired
	VaildatingDTO vaildatingDTO;
	
	@GetMapping("/all")
	public ResponseEntity<?> getAllBills(@RequestHeader(name = "Authorization" ) String tokenDup) throws DataNotFoundException {
		 {
			String token = tokenDup.substring(7);
					try {
				UserDetails user = sservice.getShopByEmail(jwtTokenUtil.extractUsername(token));
				if (jwtTokenUtil.validateToken(token, user)) {
					vaildatingDTO.setValidStatus(true);

					return new ResponseEntity<>(service.getAll(),HttpStatus.OK);
				} else {
					vaildatingDTO.setValidStatus(false);
					return new ResponseEntity<>(vaildatingDTO, HttpStatus.FORBIDDEN);
				}
			} catch (Exception e) { 
				vaildatingDTO.setValidStatus(false);
				return new ResponseEntity<>(vaildatingDTO, HttpStatus.FORBIDDEN);
			}
		
	}
	
	@GetMapping("/getById/{p1}")
	public ResponseEntity<?> getBill(@PathVariable("p1") int id) throws DataNotFoundException {
		return new ResponseEntity<>(service.getBill(id),HttpStatus.OK);
	}
}
