package com.virtusa.jsm.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@EnableWebSecurity
@Configuration
public class SpringConfig extends WebSecurityConfigurerAdapter{​​​​​​​
    
    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {​​​​​​​
        // TODO Auto-generated method stub
        auth.inMemoryAuthentication().withUser("shivani").password(passwordEncoder().encode("bokaro123")).roles("admin")
        .and().withUser("lalitha").password(passwordEncoder().encode("vijag123")).roles("user");           
    }​​​​​​​
    
    @Override
    protected void configure(HttpSecurity http) throws Exception {​​​​​​​
        // TODO Auto-generated method stub
        http.authorizeRequests().antMatchers("/product/get*").hasRole("admin").anyRequest().authenticated()
        .and().httpBasic();
        http.csrf().disable();// only get end point.. it will appy for post methods also
        // post put delete everything 
    }​​​​​​​

    @Bean
    PasswordEncoder passwordEncoder() {​​​​​​​
        return new BCryptPasswordEncoder();
    }​​​​​​​
    
}​​​​​​​